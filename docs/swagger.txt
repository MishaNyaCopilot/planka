swagger.json
Explore
PLANKA API
 2.0.0
OAS 3.0
swagger.json
API documentation for PLANKA - Real-Time Collaborative Kanban Board Application

Fair Use License
Servers

/api - Base path for API endpoints

Authorize
Access Tokens


POST
/access-tokens/accept-terms
Accept terms and conditions

Accept terms during the authentication flow. Converts the pending token to an access token.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "pendingToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ4...",
  "signature": "940226c4c41f51afe3980ceb63704e752636526f4c52a4ea579e85b247493d94"
}
Responses
Code	Description	Links
200
Terms accepted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ5..."
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Invalid pending token

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Invalid pending token"
}
No links
403
Authentication restriction

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Invalid signature"
}
No links

POST
/access-tokens
User login

Authenticates a user using email/username and password. Returns an access token for API authentication.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "emailOrUsername": "john.doe@example.com",
  "password": "SecurePassword123!",
  "withHttpOnlyToken": true
}
Responses
Code	Description	Links
200
Login successful

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ4..."
}
Headers:
Name	Description	Type
Set-Cookie
HTTP-only authentication cookie (if withHttpOnlyToken is true)

string
Example: httpOnlyToken=29aa3e38-8d24-4029-9743-9cbcf0a0dd5c; HttpOnly; Secure; SameSite=Strict
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Invalid credentials"
}
No links
403
Authentication restriction

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Use single sign-on"
}
No links

DELETE
/access-tokens/me
User logout


Logs out the current user by deleting the session and access token. Clears HTTP-only cookies if present.

Parameters
No parameters

Responses
Code	Description	Links
200
Logout successful

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ4..."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links

POST
/access-tokens/exchange-with-oidc
Exchange OIDC code for access token

Exchanges an OIDC authorization code for an access token. Creates a user if they do not exist.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "code": "abc123def456ghi789",
  "nonce": "random-nonce-123456",
  "withHttpOnlyToken": true
}
Responses
Code	Description	Links
200
OIDC exchange successful

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ4..."
}
Headers:
Name	Description	Type
Set-Cookie
HTTP-only authentication cookie (if withHttpOnlyToken is true)

string
Example: httpOnlyToken=29aa3e38-8d24-4029-9743-9cbcf0a0dd5c; HttpOnly; Secure; SameSite=Strict
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
OIDC authentication error

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Invalid code or nonce"
}
No links
403
Authentication restriction

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Terms acceptance required"
}
No links
409
Conflict error

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Email already in use"
}
No links
422
Missing required values

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Unable to retrieve required values (email, name)"
}
No links
500
OIDC configuration error

Media type

application/json
Example Value
Schema
{
  "code": "E_INTERNAL_SERVER_ERROR",
  "message": "Invalid OIDC configuration"
}
No links

POST
/access-tokens/revoke-pending-token
Revoke pending token

Revokes a pending authentication token and cancels the authentication flow.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "pendingToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ4..."
}
Responses
Code	Description	Links
200
Pending token revoked successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": null
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Actions


GET
/boards/{boardId}/actions
Get board actions


Retrieves a list of actions (activity history) for a specific board, with pagination support.

Parameters
Name	Description
boardId *
string
(path)
ID of the board to get actions for

1357158568008091264
beforeId
string
(query)
ID to get actions before (for pagination)

1357158568008091265
Responses
Code	Description	Links
200
Board actions retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "boardId": "1357158568008091265",
      "cardId": "1357158568008091266",
      "userId": "1357158568008091267",
      "type": "moveCard",
      "data": {
        "card": {
          "name": "Implement user authentication"
        },
        "toList": {
          "id": "1357158568008091268",
          "name": "To Do",
          "type": "active"
        },
        "fromList": {
          "id": "1357158568008091269",
          "name": "Done",
          "type": "closed"
        }
      },
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ],
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/cards/{cardId}/actions
Get card actions


Retrieves a list of actions (activity history) for a specific card, with pagination support.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to get actions for

1357158568008091264
beforeId
string
(query)
ID to get actions before (for pagination)

1357158568008091265
Responses
Code	Description	Links
200
Card actions retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "boardId": "1357158568008091265",
      "cardId": "1357158568008091266",
      "userId": "1357158568008091267",
      "type": "moveCard",
      "data": {
        "card": {
          "name": "Implement user authentication"
        },
        "toList": {
          "id": "1357158568008091268",
          "name": "To Do",
          "type": "active"
        },
        "fromList": {
          "id": "1357158568008091269",
          "name": "Done",
          "type": "closed"
        }
      },
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ],
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Attachments


POST
/cards/{cardId}/attachments
Create attachment


Creates an attachment on a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to create the attachment on

1357158568008091264
Request body

multipart/form-data
type *
string
Type of the attachment

file
string($binary)
File to upload

url
string($url)
URL for the link attachment

name *
string
Name/title of the attachment

requestId
string
Request ID for tracking

Responses
Code	Description	Links
200
Attachment created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "creatorUserId": "1357158568008091266",
    "type": "link",
    "data": {
      "url": "https://google.com/search?q=planka",
      "faviconUrl": "https://storage.example.com/favicons/google.com.png"
    },
    "name": "Important Attachment",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Upload or validation error

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "No file was uploaded"
}
No links

DELETE
/attachments/{id}
Delete attachment


Deletes an attachment. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the attachment to delete

1357158568008091264
Responses
Code	Description	Links
200
Attachment deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "creatorUserId": "1357158568008091266",
    "type": "link",
    "data": {
      "url": "https://google.com/search?q=planka",
      "faviconUrl": "https://storage.example.com/favicons/google.com.png"
    },
    "name": "Important Attachment",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/attachments/{id}
Update attachment


Updates an attachment. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the attachment to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "name": "Important Attachment"
}
Responses
Code	Description	Links
200
Attachment updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "creatorUserId": "1357158568008091266",
    "type": "link",
    "data": {
      "url": "https://google.com/search?q=planka",
      "faviconUrl": "https://storage.example.com/favicons/google.com.png"
    },
    "name": "Important Attachment",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Background Images


POST
/projects/{projectId}/background-images
Upload background image


Uploads a background image for a project. Requires project manager permissions.

Parameters
Name	Description
projectId *
string
(path)
ID of the project to upload background image for

1357158568008091264
Request body

multipart/form-data
file *
string($binary)
Background image file (must be an image format)

requestId
string
Request ID for tracking

Responses
Code	Description	Links
200
Background image uploaded successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "size": "1024576",
    "url": "https://storage.example.com/background-images/1357158568008091264/original.jpg",
    "thumbnailUrls": {
      "outside360": "https://storage.example.com/background-images/1357158568008091264/outside-360.jpg"
    },
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
File upload error

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "No file was uploaded"
}
No links

DELETE
/background-images/{id}
Delete background image


Deletes a background image. Requires project manager permissions.

Parameters
Name	Description
id *
string
(path)
ID of the background image to delete

1357158568008091264
Responses
Code	Description	Links
200
Background image deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "size": "1024576",
    "url": "https://storage.example.com/background-images/1357158568008091264/original.jpg",
    "thumbnailUrls": {
      "outside360": "https://storage.example.com/background-images/1357158568008091264/outside-360.jpg"
    },
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Base Custom Field Groups


POST
/projects/{projectId}/base-custom-field-groups
Create base custom field group


Creates a base custom field group within a project. Requires project manager permissions.

Parameters
Name	Description
projectId *
string
(path)
ID of the project to create the base custom field group in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "name": "Base Properties"
}
Responses
Code	Description	Links
200
Base custom field group created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "name": "Base Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/base-custom-field-groups/{id}
Delete base custom field group


Deletes a base custom field group. Requires project manager permissions.

Parameters
Name	Description
id *
string
(path)
ID of the base custom field group to delete

1357158568008091264
Responses
Code	Description	Links
200
Base custom field group deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "name": "Base Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/base-custom-field-groups/{id}
Update base custom field group


Updates a base custom field group. Requires project manager permissions.

Parameters
Name	Description
id *
string
(path)
ID of the base custom field group to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "name": "Base Properties"
}
Responses
Code	Description	Links
200
Base custom field group updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "name": "Base Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Board Memberships


POST
/boards/{boardId}/board-memberships
Create board membership


Creates a board membership within a board. Requires project manager permissions.

Parameters
Name	Description
boardId *
string
(path)
ID of the board to create the board membership in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "userId": "1357158568008091265",
  "role": "editor",
  "canComment": true
}
Responses
Code	Description	Links
200
Board membership created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "userId": "1357158568008091267",
    "role": "editor",
    "canComment": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

DELETE
/board-memberships/{id}
Delete board membership


Deletes a board membership. Users can remove their own membership, project managers can remove any membership.

Parameters
Name	Description
id *
string
(path)
ID of the board membership to delete

1357158568008091264
Responses
Code	Description	Links
200
Board membership deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "userId": "1357158568008091267",
    "role": "editor",
    "canComment": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/board-memberships/{id}
Update board membership


Updates a board membership. Requires project manager permissions.

Parameters
Name	Description
id *
string
(path)
ID of the board membership to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "role": "editor",
  "canComment": true
}
Responses
Code	Description	Links
200
Board membership updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "userId": "1357158568008091267",
    "role": "editor",
    "canComment": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Boards


POST
/projects/{projectId}/boards
Create board


Creates a board within a project. Supports importing from Trello. Requires project manager permissions.

Parameters
Name	Description
projectId *
string
(path)
ID of the project to create the board in

1357158568008091264
Request body

multipart/form-data
position *
number
Position of the board within the project

name *
string
Name/title of the board

importType
string
Type of import

importFile
string($binary)
Import file

requestId
string
Request ID for tracking

Responses
Code	Description	Links
200
Board created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "position": 65536,
    "name": "Development Board",
    "defaultView": "kanban",
    "defaultCardType": "project",
    "limitCardTypesToDefaultOne": false,
    "alwaysDisplayCardCreator": false,
    "expandTaskListsByDefault": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "boardMemberships": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "userId": "1357158568008091267",
        "role": "editor",
        "canComment": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Import file upload error

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "No import file was uploaded"
}
No links

DELETE
/boards/{id}
Delete board


Deletes a board and all its contents (lists, cards, etc.). Requires project manager permissions.

Parameters
Name	Description
id *
string
(path)
ID of the board to delete

1357158568008091264
Responses
Code	Description	Links
200
Board deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "position": 65536,
    "name": "Development Board",
    "defaultView": "kanban",
    "defaultCardType": "project",
    "limitCardTypesToDefaultOne": false,
    "alwaysDisplayCardCreator": false,
    "expandTaskListsByDefault": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/boards/{id}
Get board details


Retrieves comprehensive board information, including lists, cards, and other related data.

Parameters
Name	Description
id *
string
(path)
ID of the board to retrieve

1357158568008091264
subscribe
boolean
(query)
Whether to subscribe to real-time updates for this board (only for socket connections)


true
Responses
Code	Description	Links
200
Board details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "position": 65536,
    "name": "Development Board",
    "defaultView": "kanban",
    "defaultCardType": "project",
    "limitCardTypesToDefaultOne": false,
    "alwaysDisplayCardCreator": false,
    "expandTaskListsByDefault": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z",
    "isSubscribed": true
  },
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "projects": [
      {
        "id": "1357158568008091264",
        "ownerProjectManagerId": "1357158568008091265",
        "backgroundImageId": "1357158568008091266",
        "name": "Development Project",
        "description": "A project for developing new features...",
        "backgroundType": "gradient",
        "backgroundGradient": "ocean-dive",
        "isHidden": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "boardMemberships": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "userId": "1357158568008091267",
        "role": "editor",
        "canComment": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "labels": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "position": 65536,
        "name": "Bug",
        "color": "berry-red",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "lists": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "type": "active",
        "position": 65536,
        "name": "To Do",
        "color": "lagoon-blue",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cards": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "listId": "1357158568008091266",
        "creatorUserId": "1357158568008091267",
        "prevListId": "1357158568008091268",
        "coverAttachmentId": "1357158568008091269",
        "type": "project",
        "position": 65536,
        "name": "Implement user authentication",
        "description": "Add JWT-based authentication system...",
        "dueDate": "2024-01-01T00:00:00.000Z",
        "isDueCompleted": false,
        "stopwatch": {
          "startedAt": "2024-01-01T00:00:00.000Z",
          "total": 3600
        },
        "commentsTotal": 100,
        "isClosed": false,
        "listChangedAt": "2024-01-01T00:00:00.000Z",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z",
        "isSubscribed": true
      }
    ],
    "cardMemberships": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cardLabels": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "labelId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "taskLists": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "position": 65536,
        "name": "Development Tasks",
        "showOnFrontOfCard": true,
        "hideCompletedTasks": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "tasks": [
      {
        "id": "1357158568008091264",
        "taskListId": "1357158568008091265",
        "linkedCardId": "1357158568008091266",
        "assigneeUserId": "1357158568008091267",
        "position": 65536,
        "name": "Write unit tests",
        "isCompleted": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "attachments": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "creatorUserId": "1357158568008091266",
        "type": "link",
        "data": {
          "url": "https://google.com/search?q=planka",
          "faviconUrl": "https://storage.example.com/favicons/google.com.png"
        },
        "name": "Important Attachment",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldGroups": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "cardId": "1357158568008091266",
        "baseCustomFieldGroupId": "1357158568008091267",
        "position": 65536,
        "name": "Properties",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldValues": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "customFieldId": "1357158568008091267",
        "content": "High Priority",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/boards/{id}
Update board


Updates a board. Project managers can update all fields, board members can only subscribe/unsubscribe.

Parameters
Name	Description
id *
string
(path)
ID of the board to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Development Board",
  "defaultView": "kanban",
  "defaultCardType": "project",
  "limitCardTypesToDefaultOne": false,
  "alwaysDisplayCardCreator": false,
  "expandTaskListsByDefault": false,
  "isSubscribed": true
}
Responses
Code	Description	Links
200
Board updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "position": 65536,
    "name": "Development Board",
    "defaultView": "kanban",
    "defaultCardType": "project",
    "limitCardTypesToDefaultOne": false,
    "alwaysDisplayCardCreator": false,
    "expandTaskListsByDefault": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Card Labels


POST
/cards/{cardId}/card-labels
Add label to card


Adds a label to a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to add the label to

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "labelId": "1357158568008091265"
}
Responses
Code	Description	Links
200
Label added to card successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "labelId": "1357158568008091266",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

DELETE
/cards/{cardId}/card-labels/labelId:{labelId}
Remove label from card


Removes a label from a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to remove the label from

1357158568008091264
labelId *
string
(path)
ID of the label to remove from the card

1357158568008091265
Responses
Code	Description	Links
200
Label removed from card successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "labelId": "1357158568008091266",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Card Memberships


POST
/cards/{cardId}/card-memberships
Add user to card


Adds a user to a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to add the user to

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "userId": "1357158568008091265"
}
Responses
Code	Description	Links
200
User added to card successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "userId": "1357158568008091266",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

DELETE
/cards/{cardId}/card-memberships/userId:{userId}
Remove user from card


Removes a user from a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to remove the user from

1357158568008091264
userId *
string
(path)
ID of the user to remove from the card

1357158568008091265
Responses
Code	Description	Links
200
User removed from card successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "userId": "1357158568008091266",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Cards


POST
/lists/{listId}/cards
Create card


Creates a card within a list. Requires board editor permissions.

Parameters
Name	Description
listId *
string
(path)
ID of the list to create the card in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "type": "project",
  "position": 65536,
  "name": "Implement user authentication",
  "description": "Add JWT-based authentication system...",
  "dueDate": "2024-01-01T00:00:00.000Z",
  "isDueCompleted": false,
  "stopwatch": {
    "startedAt": "2024-01-01T00:00:00.000Z",
    "total": 3600
  }
}
Responses
Code	Description	Links
200
Card created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "listId": "1357158568008091266",
    "creatorUserId": "1357158568008091267",
    "prevListId": "1357158568008091268",
    "coverAttachmentId": "1357158568008091269",
    "type": "project",
    "position": 65536,
    "name": "Implement user authentication",
    "description": "Add JWT-based authentication system...",
    "dueDate": "2024-01-01T00:00:00.000Z",
    "isDueCompleted": false,
    "stopwatch": {
      "startedAt": "2024-01-01T00:00:00.000Z",
      "total": 3600
    },
    "commentsTotal": 100,
    "isClosed": false,
    "listChangedAt": "2024-01-01T00:00:00.000Z",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

GET
/lists/{listId}/cards
Get cards in list


Retrieves cards from an endless list with filtering, search, and pagination support.

Parameters
Name	Description
listId *
string
(path)
ID of the list to get cards from (must be an endless list)

1357158568008091264
before
string
(query)
Pagination cursor (JSON object with id and listChangedAt)

{"id": "1357158568008091269", "listChangedAt": "2024-01-01T00:00:00.000Z"}
search
string
(query)
Search term to filter cards

bug fix
filterUserIds
string
(query)
Comma-separated user IDs to filter by members

1357158568008091265,1357158568008091266
filterLabelIds
string
(query)
Comma-separated label IDs to filter by labels

1357158568008091267,1357158568008091268
Responses
Code	Description	Links
200
Cards retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "boardId": "1357158568008091265",
      "listId": "1357158568008091266",
      "creatorUserId": "1357158568008091267",
      "prevListId": "1357158568008091268",
      "coverAttachmentId": "1357158568008091269",
      "type": "project",
      "position": 65536,
      "name": "Implement user authentication",
      "description": "Add JWT-based authentication system...",
      "dueDate": "2024-01-01T00:00:00.000Z",
      "isDueCompleted": false,
      "stopwatch": {
        "startedAt": "2024-01-01T00:00:00.000Z",
        "total": 3600
      },
      "commentsTotal": 100,
      "isClosed": false,
      "listChangedAt": "2024-01-01T00:00:00.000Z",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "isSubscribed": true
    }
  ],
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cardMemberships": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cardLabels": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "labelId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "taskLists": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "position": 65536,
        "name": "Development Tasks",
        "showOnFrontOfCard": true,
        "hideCompletedTasks": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "tasks": [
      {
        "id": "1357158568008091264",
        "taskListId": "1357158568008091265",
        "linkedCardId": "1357158568008091266",
        "assigneeUserId": "1357158568008091267",
        "position": 65536,
        "name": "Write unit tests",
        "isCompleted": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "attachments": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "creatorUserId": "1357158568008091266",
        "type": "link",
        "data": {
          "url": "https://google.com/search?q=planka",
          "faviconUrl": "https://storage.example.com/favicons/google.com.png"
        },
        "name": "Important Attachment",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldGroups": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "cardId": "1357158568008091266",
        "baseCustomFieldGroupId": "1357158568008091267",
        "position": 65536,
        "name": "Properties",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldValues": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "customFieldId": "1357158568008091267",
        "content": "High Priority",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/cards/{id}
Delete card


Deletes a card and all its contents (tasks, attachments, etc.). Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the card to delete

1357158568008091264
Responses
Code	Description	Links
200
Card deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "listId": "1357158568008091266",
    "creatorUserId": "1357158568008091267",
    "prevListId": "1357158568008091268",
    "coverAttachmentId": "1357158568008091269",
    "type": "project",
    "position": 65536,
    "name": "Implement user authentication",
    "description": "Add JWT-based authentication system...",
    "dueDate": "2024-01-01T00:00:00.000Z",
    "isDueCompleted": false,
    "stopwatch": {
      "startedAt": "2024-01-01T00:00:00.000Z",
      "total": 3600
    },
    "commentsTotal": 100,
    "isClosed": false,
    "listChangedAt": "2024-01-01T00:00:00.000Z",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/cards/{id}
Get card details


Retrieves comprehensive card information, including tasks, attachments, and other related data.

Parameters
Name	Description
id *
string
(path)
ID of the card to retrieve

1357158568008091264
Responses
Code	Description	Links
200
Card details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "listId": "1357158568008091266",
    "creatorUserId": "1357158568008091267",
    "prevListId": "1357158568008091268",
    "coverAttachmentId": "1357158568008091269",
    "type": "project",
    "position": 65536,
    "name": "Implement user authentication",
    "description": "Add JWT-based authentication system...",
    "dueDate": "2024-01-01T00:00:00.000Z",
    "isDueCompleted": false,
    "stopwatch": {
      "startedAt": "2024-01-01T00:00:00.000Z",
      "total": 3600
    },
    "commentsTotal": 100,
    "isClosed": false,
    "listChangedAt": "2024-01-01T00:00:00.000Z",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z",
    "isSubscribed": true
  },
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cardMemberships": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cardLabels": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "labelId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "taskLists": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "position": 65536,
        "name": "Development Tasks",
        "showOnFrontOfCard": true,
        "hideCompletedTasks": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "tasks": [
      {
        "id": "1357158568008091264",
        "taskListId": "1357158568008091265",
        "linkedCardId": "1357158568008091266",
        "assigneeUserId": "1357158568008091267",
        "position": 65536,
        "name": "Write unit tests",
        "isCompleted": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "attachments": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "creatorUserId": "1357158568008091266",
        "type": "link",
        "data": {
          "url": "https://google.com/search?q=planka",
          "faviconUrl": "https://storage.example.com/favicons/google.com.png"
        },
        "name": "Important Attachment",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldGroups": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "cardId": "1357158568008091266",
        "baseCustomFieldGroupId": "1357158568008091267",
        "position": 65536,
        "name": "Properties",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldValues": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "customFieldId": "1357158568008091267",
        "content": "High Priority",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/cards/{id}
Update card


Updates a card. Board editors can update all fields, viewers can only subscribe/unsubscribe.

Parameters
Name	Description
id *
string
(path)
ID of the card to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "boardId": "1357158568008091265",
  "listId": "1357158568008091266",
  "coverAttachmentId": "1357158568008091267",
  "type": "project",
  "position": 65536,
  "name": "Implement user authentication",
  "description": "Add JWT-based authentication system...",
  "dueDate": "2024-01-01T00:00:00.000Z",
  "isDueCompleted": false,
  "stopwatch": {
    "startedAt": "2024-01-01T00:00:00.000Z",
    "total": 3600
  },
  "isSubscribed": true
}
Responses
Code	Description	Links
200
Card updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "listId": "1357158568008091266",
    "creatorUserId": "1357158568008091267",
    "prevListId": "1357158568008091268",
    "coverAttachmentId": "1357158568008091269",
    "type": "project",
    "position": 65536,
    "name": "Implement user authentication",
    "description": "Add JWT-based authentication system...",
    "dueDate": "2024-01-01T00:00:00.000Z",
    "isDueCompleted": false,
    "stopwatch": {
      "startedAt": "2024-01-01T00:00:00.000Z",
      "total": 3600
    },
    "commentsTotal": 100,
    "isClosed": false,
    "listChangedAt": "2024-01-01T00:00:00.000Z",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

POST
/cards/{id}/duplicate
Duplicate card


Creates a duplicate of a card with all its contents (tasks, attachments, etc.). Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the card to duplicate

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Implement user authentication (copy)"
}
Responses
Code	Description	Links
200
Card duplicated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "listId": "1357158568008091266",
    "creatorUserId": "1357158568008091267",
    "prevListId": "1357158568008091268",
    "coverAttachmentId": "1357158568008091269",
    "type": "project",
    "position": 65536,
    "name": "Implement user authentication",
    "description": "Add JWT-based authentication system...",
    "dueDate": "2024-01-01T00:00:00.000Z",
    "isDueCompleted": false,
    "stopwatch": {
      "startedAt": "2024-01-01T00:00:00.000Z",
      "total": 3600
    },
    "commentsTotal": 100,
    "isClosed": false,
    "listChangedAt": "2024-01-01T00:00:00.000Z",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "cardMemberships": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "cardLabels": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "labelId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "taskLists": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "position": 65536,
        "name": "Development Tasks",
        "showOnFrontOfCard": true,
        "hideCompletedTasks": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "tasks": [
      {
        "id": "1357158568008091264",
        "taskListId": "1357158568008091265",
        "linkedCardId": "1357158568008091266",
        "assigneeUserId": "1357158568008091267",
        "position": 65536,
        "name": "Write unit tests",
        "isCompleted": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "attachments": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "creatorUserId": "1357158568008091266",
        "type": "link",
        "data": {
          "url": "https://google.com/search?q=planka",
          "faviconUrl": "https://storage.example.com/favicons/google.com.png"
        },
        "name": "Important Attachment",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldGroups": [
      {
        "id": "1357158568008091264",
        "boardId": "1357158568008091265",
        "cardId": "1357158568008091266",
        "baseCustomFieldGroupId": "1357158568008091267",
        "position": 65536,
        "name": "Properties",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldValues": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "customFieldId": "1357158568008091267",
        "content": "High Priority",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

POST
/cards/{id}/read-notifications
Mark card notifications as read


Marks all notifications for a specific card as read for the current user. Requires access to the card.

Parameters
Name	Description
id *
string
(path)
ID of the card to mark notifications as read for

1357158568008091264
Responses
Code	Description	Links
200
Notifications marked as read successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "listId": "1357158568008091266",
    "creatorUserId": "1357158568008091267",
    "prevListId": "1357158568008091268",
    "coverAttachmentId": "1357158568008091269",
    "type": "project",
    "position": 65536,
    "name": "Implement user authentication",
    "description": "Add JWT-based authentication system...",
    "dueDate": "2024-01-01T00:00:00.000Z",
    "isDueCompleted": false,
    "stopwatch": {
      "startedAt": "2024-01-01T00:00:00.000Z",
      "total": 3600
    },
    "commentsTotal": 100,
    "isClosed": false,
    "listChangedAt": "2024-01-01T00:00:00.000Z",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "notifications": [
      {
        "id": "1357158568008091264",
        "userId": "1357158568008091265",
        "creatorUserId": "1357158568008091266",
        "boardId": "1357158568008091267",
        "cardId": "1357158568008091268",
        "commentId": "1357158568008091269",
        "actionId": "1357158568008091270",
        "type": "commentCard",
        "data": {
          "card": {
            "name": "Implement user authentication"
          },
          "text": "This task is almost complete..."
        },
        "isRead": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Comments


POST
/cards/{cardId}/comments
Create comment


Creates a new comment on a card. Requires board editor permissions or comment permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to create the comment on

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "text": "This task is almost complete..."
}
Responses
Code	Description	Links
200
Comment created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "userId": "1357158568008091266",
    "text": "This task is almost complete...",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/cards/{cardId}/comments
Get card comments


Retrieves comments for a card with pagination support. Requires access to the card.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to retrieve comments for

1357158568008091264
beforeId
string
(query)
ID to get comments before (for pagination)

1357158568008091265
Responses
Code	Description	Links
200
Comments retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "cardId": "1357158568008091265",
      "userId": "1357158568008091266",
      "text": "This task is almost complete...",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ],
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/comments/{id}
Delete comment


Deletes a comment. Can be deleted by the comment author (with comment permissions) or project manager.

Parameters
Name	Description
id *
string
(path)
ID of the comment to delete

1357158568008091264
Responses
Code	Description	Links
200
Comment deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "userId": "1357158568008091266",
    "text": "This task is almost complete...",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/comments/{id}
Update comment


Updates a comment. Only the author of the comment can update it.

Parameters
Name	Description
id *
string
(path)
ID of the comment to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "text": "This task is almost complete..."
}
Responses
Code	Description	Links
200
Comment updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "userId": "1357158568008091266",
    "text": "This task is almost complete...",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Config


GET
/config
Get application configuration

Retrieves the application configuration.

Parameters
No parameters

Responses
Code	Description	Links
200
Configuration retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "version": "2.0.0",
    "activeUsersLimit": 100,
    "oidc": {
      "authorizationUrl": "https://oidc.example.com/auth",
      "endSessionUrl": "https://oidc.example.com/logout",
      "isEnforced": false
    }
  }
}
No links
Custom Field Groups


POST
/boards/{boardId}/custom-field-groups
Create board custom field group


Creates a custom field group within a board. Either baseCustomFieldGroupId or name must be provided. Requires board editor permissions.

Parameters
Name	Description
boardId *
string
(path)
ID of the board to create the custom field group in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "baseCustomFieldGroupId": "1357158568008091265",
  "position": 65536,
  "name": "Properties"
}
Responses
Code	Description	Links
200
Custom field group created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "cardId": "1357158568008091266",
    "baseCustomFieldGroupId": "1357158568008091267",
    "position": 65536,
    "name": "Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

POST
/cards/{cardId}/custom-field-groups
Create card custom field group


Creates a custom field group within a card. Either baseCustomFieldGroupId or name must be provided. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to create the custom field group in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "baseCustomFieldGroupId": "1357158568008091265",
  "position": 65536,
  "name": "Properties"
}
Responses
Code	Description	Links
200
Custom field group created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "cardId": "1357158568008091266",
    "baseCustomFieldGroupId": "1357158568008091267",
    "position": 65536,
    "name": "Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

DELETE
/custom-field-groups/{id}
Delete custom field group


Deletes a custom field group. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the custom field group to delete

1357158568008091264
Responses
Code	Description	Links
200
Custom field group deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "cardId": "1357158568008091266",
    "baseCustomFieldGroupId": "1357158568008091267",
    "position": 65536,
    "name": "Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/custom-field-groups/{id}
Get custom field group details


Retrieves comprehensive custom field group information, including fields and values. Requires access to the board/card.

Parameters
Name	Description
id *
string
(path)
ID of the custom field group to retrieve

1357158568008091264
Responses
Code	Description	Links
200
Custom field group details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "cardId": "1357158568008091266",
    "baseCustomFieldGroupId": "1357158568008091267",
    "position": 65536,
    "name": "Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFieldValues": [
      {
        "id": "1357158568008091264",
        "cardId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "customFieldId": "1357158568008091267",
        "content": "High Priority",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/custom-field-groups/{id}
Update custom field group


Updates a custom field group. Supports both board-wide and card-specific groups. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the custom field group to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Properties"
}
Responses
Code	Description	Links
200
Custom field group updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "cardId": "1357158568008091266",
    "baseCustomFieldGroupId": "1357158568008091267",
    "position": 65536,
    "name": "Properties",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links
Custom Field Values


PATCH
/cards/{cardId}/custom-field-values/customFieldGroupId:{customFieldGroupId}:customFieldId:${customFieldId}
Create or update custom field value


Creates or updates a custom field value for a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to set the custom field value for

1357158568008091264
customFieldGroupId *
string
(path)
ID of the custom field group the value belongs to

1357158568008091265
customFieldId *
string
(path)
ID of the custom field the value belongs to

1357158568008091266
Request body

application/json
Example Value
Schema
{
  "content": "High Priority"
}
Responses
Code	Description	Links
200
Custom field value created or updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "customFieldGroupId": "1357158568008091266",
    "customFieldId": "1357158568008091267",
    "content": "High Priority",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/cards/{cardId}/custom-field-value/customFieldGroupId:{customFieldGroupId}:customFieldId:${customFieldId}
Delete custom field value


Deletes a custom field value for a specific card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to delete the custom field value from

1357158568008091264
customFieldGroupId *
string
(path)
ID of the custom field group the value belongs to

1357158568008091265
customFieldId *
string
(path)
ID of the custom field the value belongs to

1357158568008091266
Responses
Code	Description	Links
200
Custom field value deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "customFieldGroupId": "1357158568008091266",
    "customFieldId": "1357158568008091267",
    "content": "High Priority",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Custom Fields


POST
/base-custom-field-groups/{baseCustomFieldGroupId}/custom-fields
Create custom field in base custom field group


Creates a custom field within a base custom field group. Requires project manager permissions.

Parameters
Name	Description
baseCustomFieldGroupId *
string
(path)
ID of the base custom field group to create the custom field in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Priority",
  "showOnFrontOfCard": true
}
Responses
Code	Description	Links
200
Custom field created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "baseCustomFieldGroupId": "1357158568008091265",
    "customFieldGroupId": "1357158568008091266",
    "position": 65536,
    "name": "Priority",
    "showOnFrontOfCard": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

POST
/custom-field-groups/{customFieldGroupId}/custom-fields
Create custom field in custom field group


Creates a custom field within a custom field group. Requires board editor permissions.

Parameters
Name	Description
customFieldGroupId *
string
(path)
ID of the custom field group to create the custom field in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Priority",
  "showOnFrontOfCard": true
}
Responses
Code	Description	Links
200
Custom field created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "baseCustomFieldGroupId": "1357158568008091265",
    "customFieldGroupId": "1357158568008091266",
    "position": 65536,
    "name": "Priority",
    "showOnFrontOfCard": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/custom-fields/{id}
Delete custom field


Deletes a custom field. Can delete the in base custom field group (requires project manager permissions) or the custom field group (requires board editor permissions).

Parameters
Name	Description
id *
string
(path)
ID of the custom field to delete

1357158568008091264
Responses
Code	Description	Links
200
Custom field deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "baseCustomFieldGroupId": "1357158568008091265",
    "customFieldGroupId": "1357158568008091266",
    "position": 65536,
    "name": "Priority",
    "showOnFrontOfCard": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/custom-fields/{id}
Update custom field


Updates a custom field. Can update in the base custom field group (requires project manager permissions) or the custom field group (requires board editor permissions).

Parameters
Name	Description
id *
string
(path)
ID of the custom field to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Priority",
  "showOnFrontOfCard": false
}
Responses
Code	Description	Links
200
Custom field updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "baseCustomFieldGroupId": "1357158568008091265",
    "customFieldGroupId": "1357158568008091266",
    "position": 65536,
    "name": "Priority",
    "showOnFrontOfCard": true,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Labels


POST
/boards/{boardId}/labels
Create label


Creates a label within a board. Requires board editor permissions.

Parameters
Name	Description
boardId *
string
(path)
ID of the board to create the label in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Bug",
  "color": "berry-red"
}
Responses
Code	Description	Links
200
Label created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "position": 65536,
    "name": "Bug",
    "color": "berry-red",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/labels/{id}
Delete label


Deletes a label. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the label to delete

1357158568008091264
Responses
Code	Description	Links
200
Label deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "position": 65536,
    "name": "Bug",
    "color": "berry-red",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/labels/{id}
Update label


Updates a label. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the label to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Bug",
  "color": "berry-red"
}
Responses
Code	Description	Links
200
Label updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "boardId": "1357158568008091265",
    "position": 65536,
    "name": "Bug",
    "color": "berry-red",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Lists

Notification Services


POST
/boards/{boardId}/notification-services
Create notification service for board


Creates a new notification service for a board. Requires project manager permissions.

Parameters
Name	Description
boardId *
string
(path)
ID of the board to create notification service for

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "url": "https://service.example.com/planka",
  "format": "text"
}
Responses
Code	Description	Links
200
Notification service created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "url": "https://service.example.com/planka",
    "format": "text",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

POST
/users/{userId}/notification-services
Create notification service for user


Creates a new notification service for a user. Users can only create services for themselves.

Parameters
Name	Description
userId *
string
(path)
ID of the user to create notification service for (must be the current user)

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "url": "https://service.example.com/planka",
  "format": "text"
}
Responses
Code	Description	Links
200
Notification service created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "url": "https://service.example.com/planka",
    "format": "text",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

DELETE
/notification-services/{id}
Delete notification service


Deletes a notification service. Users can delete their own services, project managers can delete board services.

Parameters
Name	Description
id *
string
(path)
ID of the notification service to delete

1357158568008091264
Responses
Code	Description	Links
200
Notification service deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "url": "https://service.example.com/planka",
    "format": "text",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/notification-services/{id}
Update notification service


Updates a notification service. Users can update their own services, project managers can update board services.

Parameters
Name	Description
id *
string
(path)
ID of the notification service to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "url": "https://service.example.com/planka",
  "format": "text"
}
Responses
Code	Description	Links
200
Notification service updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "url": "https://service.example.com/planka",
    "format": "text",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

POST
/notification-services/{id}/test
Test notification service


Sends a test notification to verify the notification service is working. Users can test their own services, project managers can test board services.

Parameters
Name	Description
id *
string
(path)
ID of the notification service to test

1357158568008091264
Responses
Code	Description	Links
200
Test notification sent successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "boardId": "1357158568008091266",
    "url": "https://service.example.com/planka",
    "format": "text",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Notifications


GET
/notifications
Get user notifications


Retrieves all unread notifications for the current user, including creator users.

Parameters
No parameters

Responses
Code	Description	Links
200
Notifications retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "userId": "1357158568008091265",
      "creatorUserId": "1357158568008091266",
      "boardId": "1357158568008091267",
      "cardId": "1357158568008091268",
      "commentId": "1357158568008091269",
      "actionId": "1357158568008091270",
      "type": "commentCard",
      "data": {
        "card": {
          "name": "Implement user authentication"
        },
        "text": "This task is almost complete..."
      },
      "isRead": false,
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ],
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links

POST
/notifications/read-all
Mark all notifications as read


Marks all notifications for the current user as read.

Parameters
No parameters

Responses
Code	Description	Links
200
Notifications marked as read successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "userId": "1357158568008091265",
      "creatorUserId": "1357158568008091266",
      "boardId": "1357158568008091267",
      "cardId": "1357158568008091268",
      "commentId": "1357158568008091269",
      "actionId": "1357158568008091270",
      "type": "commentCard",
      "data": {
        "card": {
          "name": "Implement user authentication"
        },
        "text": "This task is almost complete..."
      },
      "isRead": false,
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ]
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links

GET
/notifications/{id}
Get notification details


Retrieves notification, including creator users. Users can only access their own notifications.

Parameters
Name	Description
id *
string
(path)
ID of the notification to retrieve

1357158568008091264
Responses
Code	Description	Links
200
Notification details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "creatorUserId": "1357158568008091266",
    "boardId": "1357158568008091267",
    "cardId": "1357158568008091268",
    "commentId": "1357158568008091269",
    "actionId": "1357158568008091270",
    "type": "commentCard",
    "data": {
      "card": {
        "name": "Implement user authentication"
      },
      "text": "This task is almost complete..."
    },
    "isRead": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/notifications/{id}
Update notification


Updates a notification. Users can only update their own notifications.

Parameters
Name	Description
id *
string
(path)
ID of the notification to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "isRead": true
}
Responses
Code	Description	Links
200
Notification updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "userId": "1357158568008091265",
    "creatorUserId": "1357158568008091266",
    "boardId": "1357158568008091267",
    "cardId": "1357158568008091268",
    "commentId": "1357158568008091269",
    "actionId": "1357158568008091270",
    "type": "commentCard",
    "data": {
      "card": {
        "name": "Implement user authentication"
      },
      "text": "This task is almost complete..."
    },
    "isRead": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Project Managers


POST
/projects/{projectId}/project-managers
Create project manager


Creates a project manager within a project. Requires admin privileges for shared projects or existing project manager permissions. The user must be an admin or project owner.

Parameters
Name	Description
projectId *
string
(path)
ID of the project to create the project manager in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "userId": "1357158568008091265"
}
Responses
Code	Description	Links
200
Project manager created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "userId": "1357158568008091266",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

DELETE
/project-managers/{id}
Delete project manager


Deletes a project manager. Requires admin privileges for shared projects or existing project manager permissions. Cannot remove the last project manager.

Parameters
Name	Description
id *
string
(path)
ID of the project manager to delete

1357158568008091264
Responses
Code	Description	Links
200
Project manager deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "projectId": "1357158568008091265",
    "userId": "1357158568008091266",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links
Projects


POST
/projects
Create project


Creates a project. The current user automatically becomes a project manager.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "type": "private",
  "name": "Development Project",
  "description": "A project for developing new features..."
}
Responses
Code	Description	Links
200
Project created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "ownerProjectManagerId": "1357158568008091265",
    "backgroundImageId": "1357158568008091266",
    "name": "Development Project",
    "description": "A project for developing new features...",
    "backgroundType": "gradient",
    "backgroundGradient": "ocean-dive",
    "isHidden": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "projectManagers": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links

GET
/projects
Get all accessible projects


Retrieves all projects the current user has access to, including managed projects, membership projects, and shared projects (for admins).

Parameters
No parameters

Responses
Code	Description	Links
200
Projects retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "ownerProjectManagerId": "1357158568008091265",
      "backgroundImageId": "1357158568008091266",
      "name": "Development Project",
      "description": "A project for developing new features...",
      "backgroundType": "gradient",
      "backgroundGradient": "ocean-dive",
      "isHidden": false,
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "isFavorite": true
    }
  ],
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "projectManagers": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "backgroundImages": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "size": "1024576",
        "url": "https://storage.example.com/background-images/1357158568008091264/original.jpg",
        "thumbnailUrls": {
          "outside360": "https://storage.example.com/background-images/1357158568008091264/outside-360.jpg"
        },
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "baseCustomFieldGroups": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "name": "Base Properties",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "boards": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "position": 65536,
        "name": "Development Board",
        "defaultView": "kanban",
        "defaultCardType": "project",
        "limitCardTypesToDefaultOne": false,
        "alwaysDisplayCardCreator": false,
        "expandTaskListsByDefault": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "boardMemberships": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "userId": "1357158568008091267",
        "role": "editor",
        "canComment": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "notificationServices": [
      {
        "id": "1357158568008091264",
        "userId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "url": "https://service.example.com/planka",
        "format": "text",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links

DELETE
/projects/{id}
Delete project


Deletes a project. The project must not have any boards. Requires project manager permissions.

Parameters
Name	Description
id *
string
(path)
ID of the project to delete

1357158568008091264
Responses
Code	Description	Links
200
Project deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "ownerProjectManagerId": "1357158568008091265",
    "backgroundImageId": "1357158568008091266",
    "name": "Development Project",
    "description": "A project for developing new features...",
    "backgroundType": "gradient",
    "backgroundGradient": "ocean-dive",
    "isHidden": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

GET
/projects/{id}
Get project details


Retrieves comprehensive project information, including boards, board memberships, and other related data.

Parameters
Name	Description
id *
string
(path)
ID of the project to retrieve

1357158568008091264
Responses
Code	Description	Links
200
Project details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "ownerProjectManagerId": "1357158568008091265",
    "backgroundImageId": "1357158568008091266",
    "name": "Development Project",
    "description": "A project for developing new features...",
    "backgroundType": "gradient",
    "backgroundGradient": "ocean-dive",
    "isHidden": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z",
    "isFavorite": true
  },
  "included": {
    "users": [
      {
        "id": "1357158568008091264",
        "email": "john.doe@example.com",
        "role": "admin",
        "name": "John Doe",
        "username": "john_doe",
        "avatar": {
          "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
          "thumbnailUrls": {
            "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
          }
        },
        "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
        "phone": "1234567890",
        "organization": "Acme Corporation",
        "language": "en-US",
        "subscribeToOwnCards": false,
        "subscribeToCardWhenCommenting": true,
        "turnOffRecentCardHighlighting": false,
        "enableFavoritesByDefault": false,
        "defaultEditorMode": "wysiwyg",
        "defaultHomeView": "groupedProjects",
        "defaultProjectsOrder": "byDefault",
        "termsType": "general",
        "isSsoUser": false,
        "isDeactivated": false,
        "isDefaultAdmin": false,
        "lockedFieldNames": [
          "email",
          "password",
          "name"
        ],
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "projectManagers": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "userId": "1357158568008091266",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "backgroundImages": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "size": "1024576",
        "url": "https://storage.example.com/background-images/1357158568008091264/original.jpg",
        "thumbnailUrls": {
          "outside360": "https://storage.example.com/background-images/1357158568008091264/outside-360.jpg"
        },
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "baseCustomFieldGroups": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "name": "Base Properties",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "boards": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "position": 65536,
        "name": "Development Board",
        "defaultView": "kanban",
        "defaultCardType": "project",
        "limitCardTypesToDefaultOne": false,
        "alwaysDisplayCardCreator": false,
        "expandTaskListsByDefault": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "boardMemberships": [
      {
        "id": "1357158568008091264",
        "projectId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "userId": "1357158568008091267",
        "role": "editor",
        "canComment": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "customFields": [
      {
        "id": "1357158568008091264",
        "baseCustomFieldGroupId": "1357158568008091265",
        "customFieldGroupId": "1357158568008091266",
        "position": 65536,
        "name": "Priority",
        "showOnFrontOfCard": true,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ],
    "notificationServices": [
      {
        "id": "1357158568008091264",
        "userId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "url": "https://service.example.com/planka",
        "format": "text",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/projects/{id}
Update project


Updates a project. Accessible fields depend on user permissions.

Parameters
Name	Description
id *
string
(path)
ID of the project to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "ownerProjectManagerId": "1357158568008091265",
  "backgroundImageId": "1357158568008091266",
  "name": "Development Project",
  "description": "A project for developing new features...",
  "backgroundType": "gradient",
  "backgroundGradient": "ocean-dive",
  "isHidden": false,
  "isFavorite": true
}
Responses
Code	Description	Links
200
Project updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "ownerProjectManagerId": "1357158568008091265",
    "backgroundImageId": "1357158568008091266",
    "name": "Development Project",
    "description": "A project for developing new features...",
    "backgroundType": "gradient",
    "backgroundGradient": "ocean-dive",
    "isHidden": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links
Task Lists


POST
/cards/{cardId}/task-lists
Create task list


Creates a task list within a card. Requires board editor permissions.

Parameters
Name	Description
cardId *
string
(path)
ID of the card to create task list in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Development Tasks",
  "showOnFrontOfCard": true,
  "hideCompletedTasks": false
}
Responses
Code	Description	Links
200
Task list created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "position": 65536,
    "name": "Development Tasks",
    "showOnFrontOfCard": true,
    "hideCompletedTasks": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

DELETE
/task-lists/{id}
Delete task list


Deletes a task list and all its tasks. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the task list to delete

1357158568008091264
Responses
Code	Description	Links
200
Task list deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "position": 65536,
    "name": "Development Tasks",
    "showOnFrontOfCard": true,
    "hideCompletedTasks": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/task-lists/{id}
Get task list details


Retrieves task list information, including tasks. Requires access to the card.

Parameters
Name	Description
id *
string
(path)
ID of the task list to retrieve

1357158568008091264
Responses
Code	Description	Links
200
Task list details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "position": 65536,
    "name": "Development Tasks",
    "showOnFrontOfCard": true,
    "hideCompletedTasks": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "tasks": [
      {
        "id": "1357158568008091264",
        "taskListId": "1357158568008091265",
        "linkedCardId": "1357158568008091266",
        "assigneeUserId": "1357158568008091267",
        "position": 65536,
        "name": "Write unit tests",
        "isCompleted": false,
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/task-lists/{id}
Update task list


Updates a task list. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the task list to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "position": 65536,
  "name": "Development Tasks",
  "showOnFrontOfCard": true,
  "hideCompletedTasks": false
}
Responses
Code	Description	Links
200
Task list updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "cardId": "1357158568008091265",
    "position": 65536,
    "name": "Development Tasks",
    "showOnFrontOfCard": true,
    "hideCompletedTasks": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Tasks


POST
/task-lists/{taskListId}/tasks
Create task


Creates a task within a task list. Either linkedCardId or name must be provided. Requires board editor permissions.

Parameters
Name	Description
taskListId *
string
(path)
ID of the task list to create task in

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "linkedCardId": "1357158568008091265",
  "position": 65536,
  "name": "Write unit tests",
  "isCompleted": false
}
Responses
Code	Description	Links
200
Task created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "taskListId": "1357158568008091265",
    "linkedCardId": "1357158568008091266",
    "assigneeUserId": "1357158568008091267",
    "position": 65536,
    "name": "Write unit tests",
    "isCompleted": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

DELETE
/tasks/{id}
Delete task


Deletes a task. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the task to delete

1357158568008091264
Responses
Code	Description	Links
200
Task deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "taskListId": "1357158568008091265",
    "linkedCardId": "1357158568008091266",
    "assigneeUserId": "1357158568008091267",
    "position": 65536,
    "name": "Write unit tests",
    "isCompleted": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/tasks/{id}
Update task


Updates a task. Linked card tasks have limited update options. Requires board editor permissions.

Parameters
Name	Description
id *
string
(path)
ID of the task to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "taskListId": "1357158568008091265",
  "assigneeUserId": "1357158568008091266",
  "position": 65536,
  "name": "Write unit tests",
  "isCompleted": true
}
Responses
Code	Description	Links
200
Task updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "taskListId": "1357158568008091265",
    "linkedCardId": "1357158568008091266",
    "assigneeUserId": "1357158568008091267",
    "position": 65536,
    "name": "Write unit tests",
    "isCompleted": false,
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Terms


GET
/terms/{type}
Get terms and conditions

Retrieves terms and conditions in the specified language.

Parameters
Name	Description
type *
string
(path)
Type of terms to retrieve

Available values : general, extended


general
language
string
(query)
Language code for terms localization

Available values : de-DE, en-US


en-US
Responses
Code	Description	Links
200
Terms content retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "type": "en-US",
    "language": "en-US",
    "content": "Your privacy is important to us...",
    "signature": "940226c4c41f51afe3980ceb63704e752636526f4c52a4ea579e85b247493d94"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
Users


POST
/users
Create user


Creates a user account. Requires admin privileges.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "email": "john.doe@example.com",
  "password": "SecurePassword123!",
  "role": "admin",
  "name": "John Doe",
  "username": "john_doe",
  "phone": "1234567890",
  "organization": "Acme Corporation",
  "language": "en-US",
  "subscribeToOwnCards": false,
  "subscribeToCardWhenCommenting": true,
  "turnOffRecentCardHighlighting": false
}
Responses
Code	Description	Links
200
User created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

GET
/users
Get all users


Retrieves a list of all users. Requires admin or project owner privileges.

Parameters
No parameters

Responses
Code	Description	Links
200
List of users retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "email": "john.doe@example.com",
      "role": "admin",
      "name": "John Doe",
      "username": "john_doe",
      "avatar": {
        "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
        "thumbnailUrls": {
          "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
        }
      },
      "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
      "phone": "1234567890",
      "organization": "Acme Corporation",
      "language": "en-US",
      "subscribeToOwnCards": false,
      "subscribeToCardWhenCommenting": true,
      "turnOffRecentCardHighlighting": false,
      "enableFavoritesByDefault": false,
      "defaultEditorMode": "wysiwyg",
      "defaultHomeView": "groupedProjects",
      "defaultProjectsOrder": "byDefault",
      "termsType": "general",
      "isSsoUser": false,
      "isDeactivated": false,
      "isDefaultAdmin": false,
      "lockedFieldNames": [
        "email",
        "password",
        "name"
      ],
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ]
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links

DELETE
/users/{id}
Delete user


Deletes a user account. Cannot delete the default admin user. Requires admin privileges.

Parameters
Name	Description
id *
string
(path)
ID of the user to delete

1357158568008091264
Responses
Code	Description	Links
200
User deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

GET
/users/{id}
Get user details


Retrieves a user. Use 'me' as ID to get the current user.

Parameters
Name	Description
id *
string
(path)
ID of the user or 'me' for current user

1357158568008091264
subscribe
boolean
(query)
Whether to subscribe to real-time updates for this user (only for socket connections)


true
Responses
Code	Description	Links
200
User details retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "notificationServices": [
      {
        "id": "1357158568008091264",
        "userId": "1357158568008091265",
        "boardId": "1357158568008091266",
        "url": "https://service.example.com/planka",
        "format": "text",
        "createdAt": "2024-01-01T00:00:00.000Z",
        "updatedAt": "2024-01-01T00:00:00.000Z"
      }
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/users/{id}
Update user


Updates a user. Users can update their own profile, admins can update any user.

Parameters
Name	Description
id *
string
(path)
ID of the user to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "role": "admin",
  "name": "John Doe",
  "avatar": null,
  "phone": "1234567890",
  "organization": "Acme Corporation",
  "language": "en-US",
  "subscribeToOwnCards": false,
  "subscribeToCardWhenCommenting": true,
  "turnOffRecentCardHighlighting": false,
  "enableFavoritesByDefault": false,
  "defaultEditorMode": "wysiwyg",
  "defaultHomeView": "groupedProjects",
  "defaultProjectsOrder": "byDefault",
  "isDeactivated": false
}
Responses
Code	Description	Links
200
User updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

POST
/users/{id}/avatar
Update user avatar


Updates a user's avatar image. Users can update their own avatar, admins can update any user's avatar.

Parameters
Name	Description
id *
string
(path)
ID of the user whose avatar to update

1357158568008091264
Request body

multipart/form-data
file *
string($binary)
Avatar image file (must be an image format)

Responses
Code	Description	Links
200
Avatar updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
422
Request contains semantic errors or validation failures

Media type

application/json
Example Value
Schema
{
  "code": "E_UNPROCESSABLE_ENTITY",
  "message": "Validation failed"
}
No links

PATCH
/users/{id}/email
Update user email


Updates a user's email address. Users must provide current password when updating their own email. Admins can update any user's email without a password.

Parameters
Name	Description
id *
string
(path)
ID of the user whose email to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "email": "john.doe@example.com",
  "currentPassword": "SecurePassword123!"
}
Responses
Code	Description	Links
200
Email updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

PATCH
/users/{id}/password
Update user password


Updates a user's password. Users must provide a current password when updating their own password. Admins can update any user's password without the current password. Returns a new access token when updating own password.

Parameters
Name	Description
id *
string
(path)
ID of the user whose password to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "password": "SecurePassword123!",
  "currentPassword": "SecurePassword456!"
}
Responses
Code	Description	Links
200
Password updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "included": {
    "accessTokens": [
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ4..."
    ]
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/users/{id}/username
Update user username


Updates a user's username. Users must provide a current password when updating their own username (unless they are SSO users with oidcIgnoreUsername enabled). Admins can update any user's username without the current password.

Parameters
Name	Description
id *
string
(path)
ID of the user whose username to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "username": "john_doe",
  "currentPassword": "SecurePassword123!"
}
Responses
Code	Description	Links
200
Username updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "email": "john.doe@example.com",
    "role": "admin",
    "name": "John Doe",
    "username": "john_doe",
    "avatar": {
      "url": "https://storage.example.com/user-avatars/1357158568008091264/original.jpg",
      "thumbnailUrls": {
        "cover180": "https://storage.example.com/user-avatars/1357158568008091264/cover-180.jpg"
      }
    },
    "gravatarUrl": "https://www.gravatar.com/avatar/abc123",
    "phone": "1234567890",
    "organization": "Acme Corporation",
    "language": "en-US",
    "subscribeToOwnCards": false,
    "subscribeToCardWhenCommenting": true,
    "turnOffRecentCardHighlighting": false,
    "enableFavoritesByDefault": false,
    "defaultEditorMode": "wysiwyg",
    "defaultHomeView": "groupedProjects",
    "defaultProjectsOrder": "byDefault",
    "termsType": "general",
    "isSsoUser": false,
    "isDeactivated": false,
    "isDefaultAdmin": false,
    "lockedFieldNames": [
      "email",
      "password",
      "name"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
403
Access forbidden - insufficient permissions

Media type

application/json
Example Value
Schema
{
  "code": "E_FORBIDDEN",
  "message": "Not enough rights"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links
Webhooks


POST
/webhooks
Create webhook


Creates a webhook. Requires admin privileges.

Parameters
No parameters

Request body

application/json
Example Value
Schema
{
  "name": "Webhook Updates",
  "url": "https://service.example.com/planka",
  "accessToken": "secret_token_123",
  "events": "cardCreate,cardUpdate,cardDelete",
  "excludedEvents": "userCreate,userUpdate,userDelete"
}
Responses
Code	Description	Links
200
Webhook created successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "name": "Webhook Updates",
    "url": "https://webhook.example.com/planka",
    "accessToken": "secret_token_123",
    "events": [
      "cardCreate",
      "cardUpdate",
      "cardDelete"
    ],
    "excludedEvents": [
      "userCreate",
      "userUpdate",
      "userDelete"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
409
Request conflicts with current state of the resource

Media type

application/json
Example Value
Schema
{
  "code": "E_CONFLICT",
  "message": "Resource already exists"
}
No links

GET
/webhooks
Get all webhooks


Retrieves a list of all configured webhooks. Requires admin privileges.

Parameters
No parameters

Responses
Code	Description	Links
200
List of webhooks retrieved successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "items": [
    {
      "id": "1357158568008091264",
      "name": "Webhook Updates",
      "url": "https://webhook.example.com/planka",
      "accessToken": "secret_token_123",
      "events": [
        "cardCreate",
        "cardUpdate",
        "cardDelete"
      ],
      "excludedEvents": [
        "userCreate",
        "userUpdate",
        "userDelete"
      ],
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ]
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links

DELETE
/webhooks/{id}
Delete webhook


Deletes a webhook. Requires admin privileges.

Parameters
Name	Description
id *
string
(path)
ID of the webhook to delete

1357158568008091264
Responses
Code	Description	Links
200
Webhook deleted successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "name": "Webhook Updates",
    "url": "https://webhook.example.com/planka",
    "accessToken": "secret_token_123",
    "events": [
      "cardCreate",
      "cardUpdate",
      "cardDelete"
    ],
    "excludedEvents": [
      "userCreate",
      "userUpdate",
      "userDelete"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

PATCH
/webhooks/{id}
Update webhook


Updates a webhook. Requires admin privileges.

Parameters
Name	Description
id *
string
(path)
ID of the webhook to update

1357158568008091264
Request body

application/json
Example Value
Schema
{
  "name": "Webhook Updates",
  "url": "https://service.example.com/planka",
  "accessToken": "secret_token_123",
  "events": "cardCreate,cardUpdate,cardDelete",
  "excludedEvents": "userCreate,userUpdate,userDelete"
}
Responses
Code	Description	Links
200
Webhook updated successfully

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "item": {
    "id": "1357158568008091264",
    "name": "Webhook Updates",
    "url": "https://webhook.example.com/planka",
    "accessToken": "secret_token_123",
    "events": [
      "cardCreate",
      "cardUpdate",
      "cardDelete"
    ],
    "excludedEvents": [
      "userCreate",
      "userUpdate",
      "userDelete"
    ],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
}
No links
400
Request validation failed due to missing or invalid parameters

Media type

application/json
Example Value
Schema
{
  "code": "E_MISSING_OR_INVALID_PARAMS",
  "problems": [
    "\"emailOrUsername\" is required, but it was not defined.",
    "\"password\" is required, but it was not defined."
  ],
  "message": "The server could not fulfill this request (`POST /api/access-tokens`) due to 2 missing or invalid parameters."
}
No links
401
Authentication required or invalid credentials

Media type

application/json
Example Value
Schema
{
  "code": "E_UNAUTHORIZED",
  "message": "Access token is missing, invalid or expired"
}
No links
404
Resource not found

Media type

application/json
Example Value
Schema
{
  "code": "E_NOT_FOUND",
  "message": "Resource not found"
}
No links

Schemas
Action{
id*	[...]
boardId*	[...]
cardId*	[...]
userId*	[...]
type*	[...]
data*	{...}
example: OrderedMap { "card": OrderedMap { "name": "Implement user authentication" }, "toList": OrderedMap { "id": "1357158568008091268", "name": "To Do", "type": "active" }, "fromList": OrderedMap { "id": "1357158568008091269", "name": "Done", "type": "closed" } }
createdAt*	[...]
updatedAt*	[...]
}
Attachment{
id*	[...]
cardId*	[...]
creatorUserId*	[...]
type*	[...]
data*	{...}
example: OrderedMap { "url": "https://google.com/search?q=planka", "faviconUrl": "https://storage.example.com/favicons/google.com.png" }
name*	[...]
createdAt*	[...]
updatedAt*	[...]
}
BackgroundImage{
id*	[...]
projectId*	[...]
size*	[...]
url*	[...]
thumbnailUrls*	{...}
createdAt*	[...]
updatedAt*	[...]
}
BaseCustomFieldGroup{
id*	[...]
projectId*	[...]
name*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Board{
id*	[...]
projectId*	[...]
position*	[...]
name*	[...]
defaultView*	[...]
defaultCardType*	[...]
limitCardTypesToDefaultOne*	[...]
alwaysDisplayCardCreator*	[...]
expandTaskListsByDefault*	[...]
createdAt*	[...]
updatedAt*	[...]
}
BoardMembership{
id*	[...]
projectId*	[...]
boardId*	[...]
userId*	[...]
role*	[...]
canComment*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Card{
id*	[...]
boardId*	[...]
listId*	[...]
creatorUserId*	[...]
prevListId*	[...]
coverAttachmentId*	[...]
type*	[...]
position*	[...]
name*	[...]
description*	[...]
dueDate*	[...]
isDueCompleted*	[...]
stopwatch*	{...}
nullable: true
commentsTotal*	[...]
isClosed*	[...]
listChangedAt*	[...]
createdAt*	[...]
updatedAt*	[...]
}
CardLabel{
id*	[...]
cardId*	[...]
labelId*	[...]
createdAt*	[...]
updatedAt*	[...]
}
CardMembership{
id*	[...]
cardId*	[...]
userId*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Comment{
id*	[...]
cardId*	[...]
userId*	[...]
text*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Config{
version*	[...]
activeUsersLimit	[...]
oidc*	{...}
nullable: true
}
CustomField{
id*	[...]
baseCustomFieldGroupId*	[...]
customFieldGroupId*	[...]
position*	[...]
name*	[...]
showOnFrontOfCard*	[...]
createdAt*	[...]
updatedAt*	[...]
}
CustomFieldGroup{
id*	[...]
boardId*	[...]
cardId*	[...]
baseCustomFieldGroupId*	[...]
position*	[...]
name*	[...]
createdAt*	[...]
updatedAt*	[...]
}
CustomFieldValue{
id*	[...]
cardId*	[...]
customFieldGroupId*	[...]
customFieldId*	[...]
content*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Label{
id*	[...]
boardId*	[...]
position*	[...]
name*	[...]
color*	[...]
createdAt*	[...]
updatedAt*	[...]
}
List{
id*	[...]
boardId*	[...]
type*	[...]
position*	[...]
name*	[...]
color*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Notification{
id*	[...]
userId*	[...]
creatorUserId*	[...]
boardId*	[...]
cardId*	[...]
commentId*	[...]
actionId*	[...]
type*	[...]
data*	{...}
example: OrderedMap { "card": OrderedMap { "name": "Implement user authentication" }, "text": "This task is almost complete..." }
isRead*	[...]
createdAt*	[...]
updatedAt*	[...]
}
NotificationService{
id*	[...]
userId*	[...]
boardId*	[...]
url*	[...]
format*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Project{
id*	[...]
ownerProjectManagerId*	[...]
backgroundImageId*	[...]
name*	[...]
description*	[...]
backgroundType*	[...]
backgroundGradient*	[...]
isHidden*	[...]
createdAt*	[...]
updatedAt*	[...]
}
ProjectManager{
id*	[...]
projectId*	[...]
userId*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Task{
id*	[...]
taskListId*	[...]
linkedCardId*	[...]
assigneeUserId*	[...]
position*	[...]
name*	[...]
isCompleted*	[...]
createdAt*	[...]
updatedAt*	[...]
}
TaskList{
id*	[...]
cardId*	[...]
position*	[...]
name*	[...]
showOnFrontOfCard*	[...]
hideCompletedTasks*	[...]
createdAt*	[...]
updatedAt*	[...]
}
User{
id*	[...]
email	[...]
role*	[...]
name*	[...]
username*	[...]
avatar*	{...}
nullable: true
gravatarUrl	[...]
phone*	[...]
organization*	[...]
language	[...]
subscribeToOwnCards	[...]
subscribeToCardWhenCommenting	[...]
turnOffRecentCardHighlighting	[...]
enableFavoritesByDefault	[...]
defaultEditorMode	[...]
defaultHomeView	[...]
defaultProjectsOrder	[...]
termsType*	[...]
isSsoUser	[...]
isDeactivated*	[...]
isDefaultAdmin	[...]
lockedFieldNames	[...]
createdAt*	[...]
updatedAt*	[...]
}
Webhook{
id*	[...]
name*	[...]
url*	[...]
accessToken*	[...]
events*	[...]
excludedEvents*	[...]
createdAt*	[...]
updatedAt*	[...]
}
Online validator badge
